service:
  name: aws-alexa-typescript-5

plugins:
  - serverless-webpack
  - serverless-alexa-skills
provider:
  name: aws
  runtime: nodejs8.10
  cfnRole: arn:aws:iam::353575416729:role/ServerlessCloudFormationRole

custom:
  alexa:
    vendorId: ${env:AMAZON_VENDOR_ID}
    clientId: ${env:AMAZON_CLIENT_ID}
    clientSecret: ${env:AMAZON_CLIENT_SECRET}
    localServerPort: 9090
    # Step 1: Run `sls alexa auth` to authenticate
    # Step 2: Run `sls alexa create --name "Serverless Alexa Typescript" --locale en-GB --type custom` to create a new skill
    skills:
        # Step 3: Paste the skill id returned by the create command here:
      - id: amzn1.ask.skill.5a98e0af-432a-403b-8946-6d9316a33af7
        manifest:
          publishingInformation:
            locales:
              en-GB:
                name: Serverless Alexa Typescript
          apis:
            custom:
              endpoint:
                # Step 4: Do your first deploy of your Serverless stack
                # Step 5: Paste the ARN of your lambda here:
                uri: arn:aws:lambda:us-east-1:353575416729:function:aws-alexa-typescript-5-dev-alexa
                # Step 6: Run `sls alexa update` to deploy the skill manifest
                # Step 7: Run `sls alexa build` to build the skill interaction model
                # Step 8: Enable the skill in the Alexa app to start testing.
          manifestVersion: '1.0'
        models:
          en-GB:
            interactionModel:
              languageModel:
                invocationName: serverless typescript
                intents:
                  - name: HelloIntent
                    samples:
                      - 'hello'

functions:
  alexa:
    handler: handler.alexa
    events:
      - alexaSkill: ${self:custom.alexa.skills.0.id}
